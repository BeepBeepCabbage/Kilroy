import math
from os import path

import pygame

# from all_classes import *

WIDTH = 800
HEIGHT = 600
FPS = 30

# ===============initialize pygame and create window=========
pygame.init()
pygame.mixer.init()
pygame.display.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Kilroy")
clock = pygame.time.Clock()

# ===========Add all Colors=========
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
RED = (255, 0, 0)
BLUE = (0, 0, 255)
GREEN = (0, 255, 0)
GRAY = (128, 128, 128)
PURPLE = (77, 75, 118)

# =========================Sprites Images=====================
img_dir = path.join(path.dirname(__file__), 'H:\\Images')

space_back = pygame.image.load(path.join(img_dir, "full-background.png")).convert()
space_back = pygame.transform.scale(space_back, [1200, HEIGHT])

floor_tile_img = pygame.image.load(path.join(img_dir, "game_floor_tile.png")).convert()
hero_spritesheet = pygame.image.load(path.join(img_dir, "OpenGunnerHeroVer2.png")).convert()

bullet_img = pygame.image.load(path.join(img_dir, "bullet.png")).convert()
bullet_img = pygame.transform.scale(bullet_img, [10, 10])


# ======================Define Sprites===================
class SpriteSheet(object):
    """ Class used to grab images out of a sprite sheet. """

    def __init__(self, file_name):
        """ Constructor. Pass in the file name of the sprite sheet. """

        # Load the sprite sheet.
        self.sprite_sheet = pygame.image.load(path.join(img_dir, file_name)).convert()

    def get_image(self, x, y, width, height):
        """ Grab a single image out of a larger spritesheet
            Pass in the x, y location of the sprite
            and the width and height of the sprite. """

        # Create a new blank image
        image = pygame.Surface([width, height]).convert()

        # Copy the sprite from the large sheet onto the smaller image
        image.blit(self.sprite_sheet, (0, 0), (x, y, width, height))

        # Assuming black works as the transparent color
        image.set_colorkey(PURPLE)

        # Return the image
        return image


class Player(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        # self.image.fill(BLACK)
        self.image = pygame.Surface([20, 20])

        self.rect = self.image.get_rect()
        # self.image.set_colorkey(WHITE)
        self.rect.x = 100
        self.rect.y = 100
        self.speed_x = 0
        self.speed_y = -200
        self.dir = "R"
        sprite_sheet = SpriteSheet("OpenGunnerHeroVer2.png")

        self.walk_frames_l = []
        self.idle_r = []
        self.idle_l = []
        self.walk_frames_r = []
        self.jump_frame_r = []
        self.jump_frame_l = []
        self.mid_aim_r = []
        self.top_aim_r = []
        self.top_r = []
        self.bottom_aim_mid_r = []
        self.bottom_aim_r = []
        self.bottom_r = []
        self.mid_aim_l = []
        self.top_aim_l = []
        self.top_r = []
        self.bottom_aim_mid_l = []
        self.bottom_aim_l = []
        self.bottom_l = []
        self.walk_frames_l_aim_r = []

        self.idle_mid_aim_r = []
        self.idle_top_aim_r = []
        self.idle_top_r = []
        self.idle_mid_aim_l = []
        self.idle_top_aim_l = []
        self.idle_top_l = []
        self.idle_bottom_mid_r = []
        self.idle_bottom_aim_r = []
        self.idle_bottom_r = []
        self.idle_bottom_mid_l = []
        self.idle_bottom_aim_l = []
        self.idle_bottom_l = []

        image = sprite_sheet.get_image(24, 315, 50, 50)
        self.walk_frames_r.append(image)
        image = sprite_sheet.get_image(75, 315, 50, 50)
        self.walk_frames_r.append(image)
        image = sprite_sheet.get_image(126, 315, 50, 50)
        self.walk_frames_r.append(image)
        image = sprite_sheet.get_image(177, 315, 50, 50)
        self.walk_frames_r.append(image)
        image = sprite_sheet.get_image(228, 315, 50, 50)
        self.walk_frames_r.append(image)
        image = sprite_sheet.get_image(279, 315, 50, 50)
        self.walk_frames_r.append(image)
        image = sprite_sheet.get_image(330, 315, 50, 50)
        self.walk_frames_r.append(image)
        image = sprite_sheet.get_image(381, 315, 50, 50)
        self.walk_frames_r.append(image)

        image = sprite_sheet.get_image(24, 315, 50, 50)
        image = pygame.transform.flip(image, True, False)
        self.walk_frames_l.append(image)
        image = sprite_sheet.get_image(75, 315, 50, 50)
        image = pygame.transform.flip(image, True, False)
        self.walk_frames_l.append(image)
        image = sprite_sheet.get_image(126, 315, 50, 50)
        image = pygame.transform.flip(image, True, False)
        self.walk_frames_l.append(image)
        image = sprite_sheet.get_image(177, 315, 50, 50)
        image = pygame.transform.flip(image, True, False)
        self.walk_frames_l.append(image)
        image = sprite_sheet.get_image(228, 315, 50, 50)
        image = pygame.transform.flip(image, True, False)
        self.walk_frames_l.append(image)
        image = sprite_sheet.get_image(279, 315, 50, 50)
        image = pygame.transform.flip(image, True, False)
        self.walk_frames_l.append(image)
        image = sprite_sheet.get_image(330, 315, 50, 50)
        image = pygame.transform.flip(image, True, False)
        self.walk_frames_l.append(image)
        image = sprite_sheet.get_image(381, 315, 50, 50)
        image = pygame.transform.flip(image, True, False)
        self.walk_frames_l.append(image)

        image = sprite_sheet.get_image(25, 849, 50, 57)
        self.mid_aim_r.append(image)
        image = sprite_sheet.get_image(76, 849, 50, 57)
        self.mid_aim_r.append(image)
        image = sprite_sheet.get_image(127,849, 50, 57)
        self.mid_aim_r.append(image)
        image = sprite_sheet.get_image(178,849, 50, 57)
        self.mid_aim_r.append(image)
        image = sprite_sheet.get_image(229,849, 50, 57)
        self.mid_aim_r.append(image)
        image = sprite_sheet.get_image(280,849, 50, 57)
        self.mid_aim_r.append(image)
        image = sprite_sheet.get_image(331,849, 50, 57)
        self.mid_aim_r.append(image)
        image = sprite_sheet.get_image(382, 856, 50, 57)
        self.mid_aim_r.append(image)

        image = sprite_sheet.get_image(25, 856, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.mid_aim_l.append(image)
        image = sprite_sheet.get_image(76, 856, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.mid_aim_l.append(image)
        image = sprite_sheet.get_image(127, 856, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.mid_aim_l.append(image)
        image = sprite_sheet.get_image(178, 856, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.mid_aim_l.append(image)
        image = sprite_sheet.get_image(229, 856, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.mid_aim_l.append(image)
        image = sprite_sheet.get_image(280, 856, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.mid_aim_l.append(image)
        image = sprite_sheet.get_image(331, 856, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.mid_aim_l.append(image)
        image = sprite_sheet.get_image(382, 856, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.mid_aim_l.append(image)

        image = sprite_sheet.get_image(25, 925, 50, 57)
        self.top_aim_r.append(image)
        image = sprite_sheet.get_image(76, 925, 50, 57)
        self.top_aim_r.append(image)
        image = sprite_sheet.get_image(127, 925, 50, 57)
        self.top_aim_r.append(image)
        image = sprite_sheet.get_image(178, 925, 50, 57)
        self.top_aim_r.append(image)
        image = sprite_sheet.get_image(229, 925, 50, 57)
        self.top_aim_r.append(image)
        image = sprite_sheet.get_image(280, 925, 50, 57)
        self.top_aim_r.append(image)
        image = sprite_sheet.get_image(331, 925, 50, 57)
        self.top_aim_r.append(image)
        image = sprite_sheet.get_image(382, 925, 50, 57)
        self.top_aim_r.append(image)

        image = sprite_sheet.get_image(25, 925, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.top_aim_l.append(image)
        image = sprite_sheet.get_image(76, 925, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.top_aim_l.append(image)
        image = sprite_sheet.get_image(127, 925, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.top_aim_l.append(image)
        image = sprite_sheet.get_image(178, 925, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.top_aim_l.append(image)
        image = sprite_sheet.get_image(229, 925, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.top_aim_l.append(image)
        image = sprite_sheet.get_image(280, 925, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.top_aim_l.append(image)
        image = sprite_sheet.get_image(331, 925, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.top_aim_l.append(image)
        image = sprite_sheet.get_image(382, 925, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.top_aim_l.append(image)

        image = sprite_sheet.get_image(454, 856, 50, 57)
        self.bottom_aim_mid_r.append(image)
        image = sprite_sheet.get_image(505, 856, 50, 57)
        self.bottom_aim_mid_r.append(image)
        image = sprite_sheet.get_image(556, 856, 50, 57)
        self.bottom_aim_mid_r.append(image)
        image = sprite_sheet.get_image(607, 856, 50, 57)
        self.bottom_aim_mid_r.append(image)
        image = sprite_sheet.get_image(658, 856, 50, 57)
        self.bottom_aim_mid_r.append(image)
        image = sprite_sheet.get_image(709, 856, 50, 57)
        self.bottom_aim_mid_r.append(image)
        image = sprite_sheet.get_image(760, 856, 50, 57)
        self.bottom_aim_mid_r.append(image)
        image = sprite_sheet.get_image(811, 856, 50, 57)
        self.bottom_aim_mid_r.append(image)

        image = sprite_sheet.get_image(454, 856, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.bottom_aim_mid_l.append(image)
        image = sprite_sheet.get_image(505, 856, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.bottom_aim_mid_l.append(image)
        image = sprite_sheet.get_image(556, 856, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.bottom_aim_mid_l.append(image)
        image = sprite_sheet.get_image(607, 856, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.bottom_aim_mid_l.append(image)
        image = sprite_sheet.get_image(658, 856, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.bottom_aim_mid_l.append(image)
        image = sprite_sheet.get_image(709, 856, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.bottom_aim_mid_l.append(image)
        image = sprite_sheet.get_image(760, 856, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.bottom_aim_mid_l.append(image)
        image = sprite_sheet.get_image(811, 856, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.bottom_aim_mid_l.append(image)

        image = sprite_sheet.get_image(454, 925, 50, 57)
        self.bottom_aim_r.append(image)
        image = sprite_sheet.get_image(505, 925, 50, 57)
        self.bottom_aim_r.append(image)
        image = sprite_sheet.get_image(556, 925, 50, 57)
        self.bottom_aim_r.append(image)
        image = sprite_sheet.get_image(607, 925, 50, 57)
        self.bottom_aim_r.append(image)
        image = sprite_sheet.get_image(658, 925, 50, 57)
        self.bottom_aim_r.append(image)
        image = sprite_sheet.get_image(709, 925, 50, 57)
        self.bottom_aim_r.append(image)
        image = sprite_sheet.get_image(760, 925, 50, 57)
        self.bottom_aim_r.append(image)
        image = sprite_sheet.get_image(811, 925, 50, 57)
        self.bottom_aim_r.append(image)

        image = sprite_sheet.get_image(454, 925, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.bottom_aim_l.append(image)
        image = sprite_sheet.get_image(505, 925, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.bottom_aim_l.append(image)
        image = sprite_sheet.get_image(556, 925, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.bottom_aim_l.append(image)
        image = sprite_sheet.get_image(607, 925, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.bottom_aim_l.append(image)
        image = sprite_sheet.get_image(658, 925, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.bottom_aim_l.append(image)
        image = sprite_sheet.get_image(709, 925, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.bottom_aim_l.append(image)
        image = sprite_sheet.get_image(760, 925, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.bottom_aim_l.append(image)
        image = sprite_sheet.get_image(811, 925, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.bottom_aim_l.append(image)

        image = sprite_sheet.get_image(24, 143, 50, 50)
        self.idle_r.append(image)

        image = sprite_sheet.get_image(24, 200, 50, 50)
        self.idle_l.append(image)

        image = sprite_sheet.get_image(202, 143, 50, 50)
        self.jump_frame_r.append(image)

        image = sprite_sheet.get_image(25, 676, 50, 57)
        self.idle_mid_aim_r.append(image)

        image = sprite_sheet.get_image(81, 676, 50, 57)
        self.idle_top_aim_r.append(image)

        image = sprite_sheet.get_image(137, 676, 50, 57)
        self.idle_top_r.append(image)

        image = sprite_sheet.get_image(25, 739, 50, 57)
        self.idle_bottom_mid_r.append(image)

        image = sprite_sheet.get_image(81, 739, 50, 57)
        self.idle_bottom_aim_r.append(image)

        image = sprite_sheet.get_image(137, 739, 50, 57)
        self.idle_bottom_r.append(image)

        image = sprite_sheet.get_image(25, 676, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.idle_mid_aim_l.append(image)

        image = sprite_sheet.get_image(81, 676, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.idle_top_aim_l.append(image)

        image = sprite_sheet.get_image(137, 676, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.idle_top_l.append(image)

        image = sprite_sheet.get_image(25, 739, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.idle_bottom_mid_l.append(image)

        image = sprite_sheet.get_image(81, 739, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.idle_bottom_aim_l.append(image)

        image = sprite_sheet.get_image(137, 739, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.idle_bottom_l.append(image)

        image = sprite_sheet.get_image(202, 143, 50, 50)
        image = pygame.transform.flip(image, True, False)
        self.jump_frame_l.append(image)

        image = sprite_sheet.get_image(137, 676, 50, 57)
        self.idle_top_r.append(image)

        image = sprite_sheet.get_image(137, 676, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.idle_top_l.append(image)

        image = sprite_sheet.get_image(137, 739, 50, 57)
        self.idle_bottom_r.append(image)

        image = sprite_sheet.get_image(137, 739, 50, 57)
        image = pygame.transform.flip(image, True, False)
        self.idle_bottom_l.append(image)

        self.last_loc = self.rect.x
        self.frame = 0
        self.image = self.idle_r[self.frame]

    def update(self):
        keystate = pygame.key.get_pressed()
        if keystate[pygame.K_d]:
            self.speed_x = 7
            if self.last_loc <= self.rect.x:
                self.last_loc = self.rect.x
                if degrees_2 < 14.6 and degrees_2 > -14.6:
                    self.image = self.walk_frames_r[self.frame]
                    self.dir = 'R'
                    self.frame += 1
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 > 14.5 and degrees_2 < 46:
                    self.image = self.bottom_aim_mid_r[self.frame]
                    self.dir = 'R'
                    self.frame += 1
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 > 45 and degrees_2 < 74.5:
                    self.image = self.bottom_aim_r[self.frame]
                    self.dir = 'R'
                    self.frame += 1
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 < -46 and degrees_2 > -74.5:
                    self.image = self.top_aim_r[self.frame]
                    self.frame += 1
                    self.dir = 'R'
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 > -46 and degrees_2 < - 14.6:
                    self.image = self.mid_aim_r[self.frame]
                    self.dir = 'R'
                    self.frame += 1
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 > 165.4 or degrees_2 < -165.4:
                    self.image = self.walk_frames_l[self.frame]
                    self.frame += 1
                    self.dir = "L"
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 > -135 and degrees_2 < -105.5:
                    self.image = self.top_aim_l[self.frame]
                    self.frame += 1
                    self.dir = "L"
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 > -165.4 and degrees_2 < -135:
                    self.image = self.mid_aim_l[self.frame]
                    self.frame += 1
                    self.dir = "L"
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 > 105.5 and degrees_2 < 135:
                    self.image = self.bottom_aim_l[self.frame]
                    self.frame += 1
                    self.dir = "L"
                    if self.frame >= 8:
                        self.frame = 0

                if degrees_2 > 135 and degrees_2 < 165.4:
                    self.image = self.bottom_aim_mid_l[self.frame]
                    self.frame += 1
                    self.dir = "L"
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 > -90 and degrees_2 < -74.6:
                    self.frame = 0
                    self.speed_x = 0
                    self.image = self.idle_top_r[self.frame]
                if degrees_2 < 90 and degrees_2 > 74.5:
                    self.frame = 0
                    self.speed_x = 0
                    self.image = self.idle_bottom_l[self.frame]
                if degrees_2 > 90 and degrees_2 < 105.5:
                    self.frame = 0
                    self.speed_x = 0
                    self.image = self.idle_bottom_r[self.frame]
                if degrees_2 < -90 and degrees_2 > -105.5:
                    self.frame = 0
                    self.speed_x = 0
                    self.image = self.idle_top_l[self.frame]
        elif keystate[pygame.K_a]:
            self.speed_x = -7
            if self.last_loc >= self.rect.x:
                self.last_loc = self.rect.x
                if degrees_2 < 14.6 and degrees_2 > -14.6:
                    self.image = self.walk_frames_r[self.frame]
                    self.dir = 'R'
                    self.frame += 1
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 > 14.5 and degrees_2 < 46:
                    self.image = self.bottom_aim_mid_r[self.frame]
                    self.dir = 'R'
                    self.frame += 1
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 > 45 and degrees_2 < 74.5:
                    self.image = self.bottom_aim_r[self.frame]
                    self.dir = 'R'
                    self.frame += 1
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 < -46 and degrees_2 > -74.5:
                    self.image = self.top_aim_r[self.frame]
                    self.frame += 1
                    self.dir = 'R'
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 > -46 and degrees_2 < - 14.6:
                    self.image = self.mid_aim_r[self.frame]
                    self.dir = 'R'
                    self.frame += 1
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 > 165.4 or degrees_2 < -165.4:
                    self.image = self.walk_frames_l[self.frame]
                    self.frame += 1
                    self.dir = "L"
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 > -135 and degrees_2 < -105.5:
                    self.image = self.top_aim_l[self.frame]
                    self.frame += 1
                    self.dir = "L"
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 > -165.4 and degrees_2 < -135:
                    self.image = self.mid_aim_l[self.frame]
                    self.frame += 1
                    self.dir = "L"
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 > 105.5 and degrees_2 < 135:
                    self.image = self.bottom_aim_l[self.frame]
                    self.frame += 1
                    self.dir = "L"
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 > 135 and degrees_2 < 165.4:
                    self.image = self.bottom_aim_mid_l[self.frame]
                    self.frame += 1
                    self.dir = "L"
                    if self.frame >= 8:
                        self.frame = 0
                if degrees_2 > -90 and degrees_2 < -74.6:
                    self.frame = 0
                    self.speed_x = 0
                    self.image = self.idle_top_r[self.frame]
                if degrees_2 < 90 and degrees_2 > 74.5:
                    self.frame = 0
                    self.speed_x = 0
                    self.image = self.idle_bottom_l[self.frame]
                if degrees_2 > 90 and degrees_2 < 105.5:
                    self.frame = 0
                    self.speed_x = 0
                    self.image = self.idle_bottom_r[self.frame]
                if degrees_2 < -90 and degrees_2 > -105.5:
                    self.frame = 0
                    self.speed_x = 0
                    self.image = self.idle_top_l[self.frame]
        else:
            self.frame = 0
            self.speed_x = 0
            if degrees_2 < 14.6 and degrees_2 > -14.6:
                self.image = self.idle_r[self.frame]
            if degrees_2 > 14.5 and degrees_2 < 46:
                self.image = self.idle_bottom_mid_r[self.frame]
            if degrees_2 > 45 and degrees_2 < 74.5:
                self.image = self.idle_bottom_aim_r[self.frame]
            if degrees_2 < -46 and degrees_2 > -74.5:
                self.image = self.idle_mid_aim_r[self.frame]
            if degrees_2 > -46 and degrees_2 < - 14.6:
                self.image = self.idle_mid_aim_r[self.frame]
            if degrees_2 > 165.4 or degrees_2 < -165.4:
                self.image = self.idle_l[self.frame]
            if degrees_2 > -135 and degrees_2 < -105.5:
                self.image = self.idle_top_aim_l[self.frame]
            if degrees_2 > -165.4 and degrees_2 < -135:
                self.image = self.idle_mid_aim_l[self.frame]
            if degrees_2 > 105.5 and degrees_2 < 135:
                self.image = self.idle_bottom_aim_l[self.frame]
            if degrees_2 > 135 and degrees_2 < 165.4:
                self.image = self.idle_bottom_mid_l[self.frame]
            if degrees_2 > -90 and degrees_2 < -74.6:
                self.image = self.idle_top_r[self.frame]
            if degrees_2 < 90 and degrees_2 > 74.5:
                self.image = self.idle_bottom_l[self.frame]
            if degrees_2 > 90 and degrees_2 < 105.5:
                self.image = self.idle_bottom_r[self.frame]
            if degrees_2 < -90 and degrees_2 > -105.5:
                self.image = self.idle_top_l[self.frame]
        self.rect.x += self.speed_x
        if self.rect.bottom >= 540:
            self.rect.bottom = 540
        if self.rect.left <= 0:
            self.rect.left = 0
            self.speed_x = 0
        if self.rect.right >= WIDTH - 25:
            self.rect.right = WIDTH - 25
            self.speed_x = 0


class Bullet(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface([20, 20])
        self.image = bullet_img
        self.rect = self.image.get_rect()
        self.image.set_colorkey(WHITE)
        self.speed_x = 0
        self.speed_y = 0
        self.rect.center = kilroy.rect.center

    def update(self):
        if distance:
            self.rect.x += dx
            self.rect.y += dy
        if self.rect.x > WIDTH or self.rect.y > HEIGHT or self.rect.y < 0 or self.rect.x < 0:
            self.kill()


class Platform(pygame.sprite.Sprite):
    def __init__(self, plat_x, plat_y):
        pygame.sprite.Sprite.__init__(self)
        self.image = floor_tile_img
        self.rect = self.image.get_rect()
        # self.image.fill(BLACK)
        self.rect.x = plat_x
        self.rect.y = plat_y

    def update(self):
        self.rect.x -= kilroy.speed_x


# ===============Add all Sprites=========
all_sprites_list = pygame.sprite.Group()

kilroy = Player()
all_sprites_list.add(kilroy)
kilroy_group = pygame.sprite.Group()

bullet = Bullet()
bullet_group = pygame.sprite.Group()

plat_groupp = pygame.sprite.Group()
platfromer = Platform(100, 100)
plat_x_2 = 50
for i in range(36):
    platfromer = Platform(plat_x_2, 450)
    plat_x_2 += 50
    plat_groupp.add(platfromer)
    all_sprites_list.add(platfromer)

# ======================Define Variables=================

stage_pos_x = 0
accerlaction = -.4
gravity = -6
x, y = bullet.rect.x, bullet.rect.y
pmx, pmy = x, y

dx, dy = 0, 0
distance = 0
speed = 14
last_update = pygame.time.get_ticks()
# =========================game loop=====================
running = True
while running:
    mouse_x, mouse_y = pygame.mouse.get_pos()
    collide = pygame.sprite.spritecollide(kilroy, plat_groupp, None)
    if collide:
        gravity = 0
        accerlaction = 0
        kilroy.rect.y = platfromer.rect.top - 50
    now = pygame.time.get_ticks()
    screen.fill(BLACK)
    clock.tick(FPS)
    radians_2 = math.atan2(mouse_y - kilroy.rect.y, mouse_x - kilroy.rect.x)
    degrees_2 = 180 * radians_2 / math.pi

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_w:
                gravity = 8
                accerlaction = -.4

            if event.key == pygame.K_SPACE and now - last_update > 1:
                last_update = pygame.time.get_ticks()
                all_sprites_list.add(bullet)
                mx, my = pygame.mouse.get_pos()
                bullet.rect.center = kilroy.rect.center
                radians = math.atan2(my - bullet.rect.y, mx - bullet.rect.x)
                distance = math.hypot(mx - pmx, my - pmy) / speed
                distance = int(distance)
                dx = math.cos(radians) * speed
                dy = math.sin(radians) * speed
                degrees = 180 * radians / math.pi
    if stage_pos_x <= -400:
        stage_pos_x = -400
    elif kilroy.rect.x >= WIDTH / 2 - 100:
        stage_pos_x -= kilroy.speed_x
        plat_x_2 -= kilroy.speed_x
        kilroy.rect.x = WIDTH / 2 - 100
    kilroy.rect.y -= gravity
    gravity = gravity + accerlaction
    screen.blit(space_back, [stage_pos_x, 0])
    all_sprites_list.update()
    bullet_group.update()
    all_sprites_list.draw(screen)
    pygame.display.flip()
pygame.quit()
